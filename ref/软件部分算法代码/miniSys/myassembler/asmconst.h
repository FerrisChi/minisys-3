#ifndef ASMCONST_H
#define ASMCONST_H
//错误编号
const int ERROR=1000;
const int ERROR_TERMINAL=1001;    //终止程序
const int ERROR_LEXICAL=1002;
const int ERROR_NPRO=1003;
const int ERROR_NDATAA=1004;
const int ERROR_NVARA=1005;
const int ERROR_NVARS=1006;
const int ERROR_NCODEA=1007;
const int ERROR_NORDER=1008;
const int ERROR_NCOM=1009;
const int ERROR_NORDERS=1010;
const int ERROR_NADDR=1011;
const int ERROR_NIMMEDIATE=1012;

const int ERROR_SEMANTIC=1100;             
const int ERROR_NOTFOUR=1101;               //地址不能被4整除
const int ERROR_DADDRESS_OVERFLOW=1102;     //数据地址越界
const int ERROR_CADDRESS_OVERFLOW=1103;     //代码地址越界
const int ERROR_SHAMT_OVERFLOW=1104;        //偏移量越界
const int ERROR_IMMEDIATE_OVERFLOW=1105;    //立即数越界
const int ERROR_DATA_OVERFLOW=1106;         //数据越界
const int ERROR_UNDEFINED_LABEL=1107;       //未定义的标号
const int ERROR_UNDEFINED_VAR=1108;         //未定义的变量
const int ERROR_NOTBEGIN_ZERO=1109;         //程序段没有从0开始
const int ERROR_CADDRESS_CONFLICT=1110;     //代码地址冲突
const int ERROR_DADDRESS_CONFLICT=1111;     //数据地址冲突
const int ERROR_VAR_REDEFINITION=1112;      //变量冲突
const int ERROR_SEGID_REDEFINITION=1113;    //标号冲突
const int ERROR_BACK=1114;                  //回填错误
const int ERROR_NOTFIRST_LABEL=1115;        //最后一个标号错误
const int ERROR_MISSING_LABEL=1116;         //起始标号漏掉了
const int ERROR_SEL_OVERFLOW=1117;			//SEL越界
const int ERROR_CP0_REG=1118;				//误用CP0的寄存器
const int ERROR_SEL=1119;					//不该出现sel字段
//警告编号
const int WARNING =2000;
const int WARNING_EXTEND=2001;
const int WARNING_CP0_REG=2002;

//终结符编号
const int T_FILEEND=0;       //文件结束
const int T_DATA   =1;
const int T_ORG_DATA=2;
const int T_IDNAME=3;
const int T_CODE=4;
const int T_ORG_CODE=5;
const int T_RCOM=6;
const int T_SRCOM=7;
const int T_SLLRCOM=8;
const int T_ICOM=9;
const int T_SICOM=10;
const int T_LWICOM=11;
const int T_JCOM=12;
const int T_BICOM=13;
const int T_PCOM=14;
const int T_JBCOM=15;
const int T_NOP=16;
const int T_END=17;
const int T_ENDS=18;
const int T_ENDL=19;
const int T_ADDR=20;
const int T_COMMENT=21;
const int T_NUM=22;
const int T_IMMEDIATE=23;
const int T_SHAMT=24;
const int T_COMMA=25;
const int T_COLON=26;
const int T_RS=27;
const int T_RT=28;
const int T_RD=29;
const int T_BRS=30;
const int T_DW=31;
const int T_SEG=32;
const int T_MRCOM=33;
const int T_MFCRCOM=34;
const int T_MULRCOM=35;
const int T_SYSRCOM=36;
const int T_JRCOM=37;
const int T_BGICOM=38;
const int T_SEL=39;
//非终结符编号
const int N_PRO=51;
const int N_DATA=52;
const int N_DATASEG=53;
const int N_DATAA=54;
const int N_ORG_DATA=55;
const int N_VARS=56;
const int N_VAR=57;
const int N_VARA=58;
const int N_VARAA=59;
const int N_DATAENDS=60;
const int N_CODE=61;
const int N_CODESEG=62;
const int N_CODEA=63;
const int N_ORG_CODE=64;
const int N_SEG=65;
const int N_STARTSEGID=66;
const int N_ORDER=67;
const int N_COM=68;
const int N_IMMEDIATE=69;
const int N_ADDR=70;
const int N_ORDERS=71;
const int N_SUBSEGID=72;
const int N_ENDSEGID=73;
const int N_CODEENDS=74;
const int N_CP0=75;
//常量定义
const int COMMOM_SIZE=100;   //常用 
const int STACK_SIZE=100;    //下推栈 
const int KEYWORDS_SIZE=73;  //关键字个数
const int VN_NUM=50;         //非终结符个数
const int VT_NUM=50;         //终结符个数
const int RULE_NUM=55;       //语法规则个数  
const int RULE_DEPTH=7;      //语法规则深度
const int REG_SIZE=6;        //寄存器长度
const int SHAMT_SIZE=6;      //偏移量长度
const int FUNC_SIZE=7;       //功能号长度
const int OP_SIZE =7;        //助记符长度 
const int IMMI_SIZE=17;      //立即数长度
const int ADDR_SIZE=17;      //地址长度
const int DATA_SIZE=33;      //数据段定义的数据大小
const int COM_SIZE=33;       //指令长度
const int OP_TABLE_SIZE=30;  //助记符表大小
const int FUNC_TABLE_SIZE=40;//功能号表大小
const int COM_TABLE_SIZE=65; //指令表大小
const int REG_TABLE_SIZE=110; //寄存器表大小
const int SEL_TABLE_SIZE=10; //SEL表大小
const int ROM_SIZE=16384;      //修改ROM大小
const int RAM_SIZE=16384;      //修改RAM大小
const int SEL_SIZE=4;		 //SEL长度
#endif
